

enum Slot {
    nextTsn = 0,
    notifyBufferFull
}



// 
export class MemDb {
    mem = new Mem()
    u64
    constructor() {
        this.u64 = new BigInt64Array(this.mem.mem.buffer)
    }

    get buffer() { return b }

    // we need faddx counters using atomics
    nextTxn(): number {
        const old = Atomics.add(this.u64, Slot.nextTsn, BigInt(1))
        return Number(old)
    }
    notifyBufferFull() {
        Atomics.notify(this.u64, Slot.notifyBufferFull);
    }
    waitBufferFull() {

    }

    addLogRecord(lr: Uint32Array) {
        // 
    }
}

interface StorageState {

}

export interface PageInfo {
    pageLsn: number // newest update to page
    recLsn: number // oldest update to page since last flush
}


